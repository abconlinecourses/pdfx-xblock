!function(){"use strict";class t{constructor(){this.events=new Map}on(t,e,i={}){if("function"!=typeof e)throw new Error("Listener must be a function");this.events.has(t)||this.events.set(t,[]);const n={listener:e,once:i.once||!1};return this.events.get(t).push(n),this}once(t,e){return this.on(t,e,{once:!0})}off(t,e){if(!this.events.has(t))return this;const i=this.events.get(t),n=i.findIndex((t=>t.listener===e));return-1!==n&&(i.splice(n,1),0===i.length&&this.events.delete(t)),this}emit(t,...e){if(!this.events.has(t))return!1;const i=this.events.get(t).slice();let n=!1;for(const o of i){n=!0;try{o.listener.apply(this,e)}catch(a){console.error(`Error in event listener for '${t}':`,a)}o.once&&this.off(t,o.listener)}return n}eventNames(){return Array.from(this.events.keys())}listenerCount(t){return this.events.has(t)?this.events.get(t).length:0}listeners(t){return this.events.has(t)?this.events.get(t).map((t=>t.listener)):[]}removeAllListeners(t){return t?this.events.delete(t):this.events.clear(),this}setMaxListeners(t){return this.maxListeners=t,this}getMaxListeners(){return this.maxListeners||10}}class e extends t{constructor(t={}){super(),this.blockId=t.blockId,this.container=t.container,this.pdfUrl=t.pdfUrl,this.currentPage=t.currentPage||1,this.pdfDocument=null,this.loadingTask=null,this.scale=1,this.rotation=0,this.renderContext=null,this.canvas=null,this.context=null,this.textLayer=null,this.isLoading=!1,this.isDocumentLoaded=!1,this._initializePDFJS()}_initializePDFJS(){if("undefined"==typeof pdfjsLib)return console.error("[PDFManager] PDF.js library not loaded"),void this.emit("error",new Error("PDF.js library not loaded"));pdfjsLib.GlobalWorkerOptions.workerSrc||(pdfjsLib.GlobalWorkerOptions.workerSrc="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/5.0.375/pdf.worker.min.mjs",console.debug("[PDFManager] Set PDF.js worker source to v5.0.375")),pdfjsLib.GlobalWorkerOptions.verbosity=pdfjsLib.VerbosityLevel.WARNINGS}async loadDocument(t){if(this.isLoading)console.warn("[PDFManager] Already loading a document");else{if(!t){const t=new Error("No PDF URL provided");throw this.emit("error",t),t}this.isLoading=!0,this.pdfUrl=t;try{console.debug(`[PDFManager] Loading PDF from: ${t}`),this.pdfDocument&&await this._cleanupDocument();const e={url:this._getSafePdfUrl(t),cMapUrl:"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/5.0.375/",cMapPacked:!0,enableXfa:!0,disableAutoFetch:!1,disableStream:!1,disableRange:!1};this.loadingTask=pdfjsLib.getDocument(e),this.loadingTask.onProgress=t=>{this.emit("loadProgress",{loaded:t.loaded,total:t.total,percent:t.total?Math.round(t.loaded/t.total*100):0})},this.pdfDocument=await this.loadingTask.promise,this.isLoading=!1,this.isDocumentLoaded=!0,console.debug(`[PDFManager] PDF loaded successfully. Pages: ${this.pdfDocument.numPages}`),this._setupCanvas(),this.emit("documentLoaded",{document:this.pdfDocument,numPages:this.pdfDocument.numPages,title:await this._getDocumentTitle(),metadata:await this._getDocumentMetadata()}),console.debug("[PDFManager] documentLoaded event emitted, rendering current page..."),await this.renderPage(this.currentPage),console.debug("[PDFManager] 🔥 BULLETPROOF FIX: Force hiding all loading indicators...");[".loading-indicator",".loading-spinner",".loading-text","#loading-indicator","#loading-spinner","#loading-text",`#pdf-loading-${this.blockId}`,`#loading-${this.blockId}`,'[class*="loading"]'].forEach((t=>{document.querySelectorAll(t).forEach((t=>{t.style.display="none",t.style.visibility="hidden",t.style.opacity="0",console.debug(`[PDFManager] ✅ Hidden loading element: ${t.className||t.id}`)}))}));[`#pdf-main-${this.blockId}`,`#pdf-container-${this.blockId}`,".pdf-main-container",".pdf-container"].forEach((t=>{document.querySelectorAll(t).forEach((t=>{t.style.display="block",t.style.visibility="visible",t.style.opacity="1",console.debug(`[PDFManager] ✅ Shown main element: ${t.className||t.id}`)}))})),console.debug("[PDFManager] 🔥 BULLETPROOF FIX: Hiding highlight containers to prevent yellow overlay...");[`#highlight-container-${this.blockId}`,".highlight-container",".highlight",".highlight-element",'[class^="highlight-"]','[id^="highlight-container-"]'].forEach((t=>{document.querySelectorAll(t).forEach((t=>{t.style.display="none",t.style.visibility="hidden",t.style.opacity="0",t.style.backgroundColor="transparent",t.classList.remove("active"),console.debug(`[PDFManager] ✅ Hidden highlight element: ${t.className||t.id}`)}))}));[`#highlight-layer-${this.blockId}`,".highlight-layer",'[id^="highlight-layer-"]'].forEach((t=>{document.querySelectorAll(t).forEach((t=>{t.style.backgroundColor="transparent",t.style.background="none",console.debug(`[PDFManager] ✅ Made highlight layer transparent: ${t.className||t.id}`)}))})),console.debug("[PDFManager] Directly showing main PDF container...");const i=document.querySelector(`#pdf-main-${this.blockId}`);if(i){i.style.display="block",console.debug("[PDFManager] Main PDF container shown directly");const t=document.querySelector(`#pdf-loading-${this.blockId}`);t&&(t.style.display="none",console.debug("[PDFManager] Loading indicator hidden"))}else console.warn("[PDFManager] Main PDF container not found for direct show");return console.debug("[PDFManager] loadDocument method completed successfully"),this.pdfDocument}catch(e){throw this.isLoading=!1,console.error("[PDFManager] Error loading PDF:",e),this.emit("error",e),e}}}_getSafePdfUrl(t){if(!t)return"";if(-1!==t.indexOf("asset-v1")){if(0!==t.indexOf("http://")&&0!==t.indexOf("https://")&&"/"===t.charAt(0)){return window.location.protocol+"//"+window.location.host+t}return t}if("/"===t.charAt(0)){return window.location.protocol+"//"+window.location.host+t}return 0!==t.indexOf("http://")&&0!==t.indexOf("https://")?"https://"+t:t}_setupCanvas(){if(this.canvas=this.container.querySelector(`#pdf-canvas-${this.blockId}`),!this.canvas){this.canvas=document.createElement("canvas"),this.canvas.id=`pdf-canvas-${this.blockId}`;const t=this.container.querySelector(`#pdf-container-${this.blockId}`);t&&t.appendChild(this.canvas)}this.context=this.canvas.getContext("2d");let t=this.container.querySelector(`#text-layer-${this.blockId}`);if(!t){t=document.createElement("div"),t.id=`text-layer-${this.blockId}`,t.className="textLayer";const e=this.container.querySelector(`#pdf-container-${this.blockId}`);e&&e.appendChild(t)}this.textLayer=t}async renderPage(t){if(console.debug("🔥 [TEST] PDFManager.renderPage called - MY CODE IS LOADED!"),!this.pdfDocument)throw new Error("No PDF document loaded");if(t<1||t>this.pdfDocument.numPages)throw new Error(`Page number ${t} out of range`);try{console.debug(`[PDFManager] Rendering page ${t}`);const e=await this.pdfDocument.getPage(t),i=this.container.querySelector(`#pdf-container-${this.blockId}`),n=this.container.querySelector(".pdf-viewer-area");if(i&&n){const t=n.offsetWidth||n.clientWidth||800,e=n.offsetHeight||n.clientHeight||600;console.debug(`[PDFManager] 🔧 Container sizing - Viewer: ${t}x${e}, Container: ${i.offsetWidth}x${i.offsetHeight}`),i.offsetWidth<200&&(i.style.width=Math.max(t-40,600)+"px",console.debug(`[PDFManager] 🔧 Fixed container width to: ${i.style.width}`))}this._calculateOptimalScale(e,"fit-width"),console.debug(`[PDFManager] 🔧 Calculated scale: ${this.scale} for fit-width mode`);const a=e.getViewport({scale:this.scale,rotation:this.rotation});console.debug(`[PDFManager] 🔧 Final viewport dimensions: ${a.width}x${a.height}`),this.canvas.width=a.width,this.canvas.height=a.height,this.canvas.style.width=a.width+"px",this.canvas.style.height=a.height+"px",this.context.clearRect(0,0,a.width,a.height);const o={canvasContext:this.context,viewport:a,enableWebGL:!1,renderInteractiveForms:!0},s=e.render(o);await s.promise,await this._renderTextLayer(e,a),this.currentPage=t,console.debug(`[PDFManager] Page ${t} rendered successfully`),setTimeout((()=>{const t=document.querySelector(`#pdf-main-${this.blockId}`),e=document.querySelector(`#pdf-loading-${this.blockId}`);t&&"none"===t.style.display&&(t.style.display="block",console.debug(`[PDFManager] ✅ Main PDF container shown for block ${this.blockId}`)),e&&"none"!==e.style.display&&(e.style.display="none",console.debug(`[PDFManager] ✅ Loading indicator hidden for block ${this.blockId}`))}),100),this.emit("pageRendered",{pageNum:t,viewport:a,canvas:this.canvas,textLayer:this.textLayer}),this.emit("pageChanged",{pageNum:t,totalPages:this.pdfDocument.numPages,viewport:a})}catch(e){throw console.error(`[PDFManager] Error rendering page ${t}:`,e),this.emit("error",e),e}}async _renderTextLayer(t,e){if(this.textLayer)try{this.textLayer.innerHTML="",this.textLayer.style.width=e.width+"px",this.textLayer.style.height=e.height+"px",this.textLayer.style.position="absolute",this.textLayer.style.top="0",this.textLayer.style.left="0",this.textLayer.style.pointerEvents="none";const i=await t.getTextContent();if(void 0!==pdfjsLib.renderTextLayer){const t=pdfjsLib.renderTextLayer({textContent:i,container:this.textLayer,viewport:e,textDivs:[]});await t.promise}else this._renderTextLayerManual(i,e)}catch(i){console.error("[PDFManager] Error rendering text layer:",i)}}_renderTextLayerManual(t,e){const i=t.items;for(const n of i){const i=pdfjsLib.Util.transform(e.transform,n.transform),a=t.styles[n.fontName],o=document.createElement("div");o.textContent=n.str,o.style.position="absolute",o.style.left=i[4]+"px",o.style.top=e.height-i[5]+"px",o.style.fontSize=i[0]*a.ascent+"px",o.style.fontFamily=a.fontFamily,o.style.color="transparent",this.textLayer.appendChild(o)}}_calculateOptimalScale(t,e="fit"){const i=this.container.querySelector(`#pdf-container-${this.blockId}`);if(!i)return console.warn("[PDFManager] Container not found, using default scale 1.0"),void(this.scale=1);let n=i.offsetWidth||i.clientWidth,a=i.offsetHeight||i.clientHeight;if(!n||!a){const t=this.container.querySelector(".pdf-viewer-area");t?(n=t.offsetWidth||t.clientWidth||800,a=t.offsetHeight||t.clientHeight||600):(n=800,a=600)}console.debug(`[PDFManager] 🔧 calculateOptimalScale - Container: ${n}x${a}, Mode: ${e}`);const o=t.getViewport({scale:1}),s=o.width,r=o.height;if(console.debug(`[PDFManager] 🔧 calculateOptimalScale - Page dimensions at scale 1.0: ${s}x${r}`),"fit-width"===e){const t=(n-40)/s;this.scale=Math.min(t,3),this.scale=Math.max(this.scale,.5),console.debug(`[PDFManager] 🔧 calculateOptimalScale - Fit-width scale: ${this.scale} (widthScale: ${t})`),i.classList.add("fit-width")}else if("fit"===e){const t=(n-40)/s,e=(a-40)/r;this.scale=t;const o=r*this.scale;o>1.5*a&&(this.scale=e),this.scale=Math.min(this.scale,2),this.scale=Math.max(this.scale,.3),console.debug(`[PDFManager] 🔧 calculateOptimalScale - Fit scale: ${this.scale} (widthScale: ${t}, heightScale: ${e}, scaledHeight: ${o})`),i.classList.remove("fit-width")}console.debug(`[PDFManager] 🔧 calculateOptimalScale - Final scale: ${this.scale}`)}async navigateToPage(t){if(console.debug(`[PDFManager] 🔍 DEBUG: navigateToPage called with pageNum: ${t}`),console.debug(`[PDFManager] 🔍 DEBUG: Current page: ${this.currentPage}, Document loaded: ${!!this.pdfDocument}`),!this.pdfDocument)throw console.error("[PDFManager] 🔍 DEBUG: No PDF document loaded, cannot navigate"),new Error("No PDF document loaded");t!==this.currentPage?(console.debug(`[PDFManager] 🔍 DEBUG: Calling renderPage with pageNum: ${t}`),await this.renderPage(t)):console.debug(`[PDFManager] 🔍 DEBUG: Already on page ${t}, no navigation needed`)}async nextPage(){this.currentPage<this.getTotalPages()&&await this.navigateToPage(this.currentPage+1)}async previousPage(){this.currentPage>1&&await this.navigateToPage(this.currentPage-1)}async setZoom(t){if(!this.pdfDocument)return void console.warn("[PDFManager] No document loaded for zoom");const e=await this.pdfDocument.getPage(this.currentPage);if("string"==typeof t){if("fit"===t)this._calculateOptimalScale(e,"fit");else if("fit-width"===t)this._calculateOptimalScale(e,"fit-width");else if("in"===t){this.scale=Math.min(5,1.25*this.scale),console.debug(`[PDFManager] Zoom in: new scale = ${this.scale}`);const t=this.container.querySelector(`#pdf-container-${this.blockId}`);t&&t.classList.remove("fit-width")}else if("out"===t){this.scale=Math.max(.1,.8*this.scale),console.debug(`[PDFManager] Zoom out: new scale = ${this.scale}`);const t=this.container.querySelector(`#pdf-container-${this.blockId}`);t&&t.classList.remove("fit-width")}}else{this.scale=Math.max(.1,Math.min(5,t));const e=this.container.querySelector(`#pdf-container-${this.blockId}`);e&&e.classList.remove("fit-width")}await this.renderPage(this.currentPage)}getCurrentPage(){return this.currentPage}getTotalPages(){return this.pdfDocument?this.pdfDocument.numPages:0}isDocumentLoaded(){return this.isDocumentLoaded}async _getDocumentTitle(){if(!this.pdfDocument)return"";try{return(await this.pdfDocument.getMetadata()).info.Title||""}catch(t){return""}}async _getDocumentMetadata(){if(!this.pdfDocument)return{};try{return(await this.pdfDocument.getMetadata()).info||{}}catch(t){return{}}}async _cleanupDocument(){this.loadingTask&&(await this.loadingTask.destroy(),this.loadingTask=null),this.pdfDocument&&(await this.pdfDocument.destroy(),this.pdfDocument=null),this.isDocumentLoaded=!1}async destroy(){console.debug("[PDFManager] Destroying PDF manager"),await this._cleanupDocument(),this.context&&this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.textLayer&&(this.textLayer.innerHTML=""),this.removeAllListeners(),this.canvas=null,this.context=null,this.textLayer=null,this.container=null}}class i extends t{constructor(t={}){super(),this.name=t.name||"base",this.blockId=t.blockId,this.container=t.container,this.pdfManager=t.pdfManager,this.storageManager=t.storageManager,this.isEnabled=!1,this.isActive=!1,this.currentPage=1,this.config={color:t.color||"#FF0000",size:t.size||5,opacity:t.opacity||1,...t.config},this.annotations=new Map,this.annotationsByPage=new Map,this.eventHandlers=new Map,this._bindMethods()}async init(){throw new Error("init() must be implemented by subclass")}enable(){throw new Error("enable() must be implemented by subclass")}disable(){throw new Error("disable() must be implemented by subclass")}activate(){throw new Error("activate() must be implemented by subclass")}deactivate(){throw new Error("deactivate() must be implemented by subclass")}cleanup(){throw new Error("cleanup() must be implemented by subclass")}handlePageChange(t){this.currentPage=t,this._renderAnnotationsForPage(t),this.emit("pageChanged",{pageNum:t,tool:this.name})}createAnnotation(t){const e={id:this._generateAnnotationId(),type:this.name,pageNum:this.currentPage,timestamp:Date.now(),userId:this.storageManager?this.storageManager.userId:"anonymous",data:t,config:{...this.config}};return this.annotations.set(e.id,e),this._addAnnotationToPage(e),this.emit("annotationCreated",e),e}updateAnnotation(t,e){const i=this.annotations.get(t);return i?(i.data={...i.data,...e},i.timestamp=Date.now(),this.emit("annotationUpdated",i),i):(console.warn(`[${this.name}Tool] Annotation ${t} not found`),null)}deleteAnnotation(t){const e=this.annotations.get(t);return e?(this.annotations.delete(t),this._removeAnnotationFromPage(e),this.emit("annotationDeleted",e),!0):(console.warn(`[${this.name}Tool] Annotation ${t} not found`),!1)}getAnnotationsForPage(t=this.currentPage){return this.annotationsByPage.get(t)||[]}getAllAnnotations(){return Array.from(this.annotations.values())}async loadAnnotations(t){try{for(const[e,i]of Object.entries(t)){const t=parseInt(e,10);if(Array.isArray(i))for(const e of i){const i={id:e.id||this._generateAnnotationId(),type:this.name,pageNum:t,timestamp:e.timestamp||Date.now(),userId:e.userId||"anonymous",data:e.data||e,config:e.config||this.config};this.annotations.set(i.id,i),this._addAnnotationToPage(i)}}this._renderAnnotationsForPage(this.currentPage),console.debug(`[${this.name}Tool] Loaded ${this.annotations.size} annotations`)}catch(e){console.error(`[${this.name}Tool] Error loading annotations:`,e)}}exportAnnotations(){const t={};for(const[e,i]of this.annotationsByPage)t[e]=i.map((t=>({id:t.id,type:t.type,timestamp:t.timestamp,userId:t.userId,data:t.data,config:t.config})));return t}setConfig(t){this.config={...this.config,...t},this.emit("configChanged",{config:this.config,tool:this.name})}getConfig(){return{...this.config}}isToolEnabled(){return this.isEnabled}isToolActive(){return this.isActive}addEventHandler(t,e,i,n={}){if(!t||"function"!=typeof i)return;const a=`${t.id||"element"}_${e}`;this.removeEventHandler(a),t.addEventListener(e,i,n),this.eventHandlers.set(a,{element:t,event:e,handler:i,options:n})}removeEventHandler(t){const e=this.eventHandlers.get(t);e&&(e.element.removeEventListener(e.event,e.handler,e.options),this.eventHandlers.delete(t))}removeAllEventHandlers(){for(const[t]of this.eventHandlers)this.removeEventHandler(t)}_addAnnotationToPage(t){this.annotationsByPage.has(t.pageNum)||this.annotationsByPage.set(t.pageNum,[]);const e=this.annotationsByPage.get(t.pageNum),i=e.findIndex((e=>e.id===t.id));-1!==i?e[i]=t:e.push(t)}_removeAnnotationFromPage(t){const e=this.annotationsByPage.get(t.pageNum);if(e){const i=e.findIndex((e=>e.id===t.id));-1!==i&&(e.splice(i,1),0===e.length&&this.annotationsByPage.delete(t.pageNum))}}_renderAnnotationsForPage(t){const e=this.getAnnotationsForPage(t);console.debug(`[${this.name}Tool] Rendering ${e.length} annotations for page ${t}`)}_generateAnnotationId(){return`${this.name}_${this.blockId}_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}_bindMethods(){this.handlePageChange=this.handlePageChange.bind(this),this.createAnnotation=this.createAnnotation.bind(this),this.updateAnnotation=this.updateAnnotation.bind(this),this.deleteAnnotation=this.deleteAnnotation.bind(this)}async destroy(){console.debug(`[${this.name}Tool] Destroying tool`),await this.cleanup(),this.isActive&&this.deactivate(),this.isEnabled&&this.disable(),this.removeAllEventHandlers(),this.removeAllListeners(),this.annotations.clear(),this.annotationsByPage.clear(),this.container=null,this.pdfManager=null,this.storageManager=null}}class n extends i{constructor(t={}){super({name:"scribble",...t}),this.fabricCanvas=null,this.canvasContainer=null,this.isDrawing=!1,this.currentBrush=null,this.config={color:"#FF0000",size:5,opacity:1,brushType:"pencil",...this.config},this.strokesByPage=new Map,this.canvasWidth=0,this.canvasHeight=0}async init(){try{if(console.debug("[ScribbleTool] Initializing scribble tool"),"undefined"==typeof fabric)throw new Error("FabricJS library not loaded");await this._setupCanvasContainer(),await this._initializeFabricCanvas(),this.isEnabled=!0,console.debug("[ScribbleTool] Scribble tool initialized successfully")}catch(t){throw console.error("[ScribbleTool] Initialization error:",t),t}}async _setupCanvasContainer(){let t=this.container.querySelector(`#draw-container-${this.blockId}`);if(!t){t=document.createElement("div"),t.id=`draw-container-${this.blockId}`,t.className="draw-container",t.style.position="absolute",t.style.top="0",t.style.left="0",t.style.pointerEvents="none",t.style.zIndex="10";const e=this.container.querySelector(`#pdf-container-${this.blockId}`);e&&e.appendChild(t)}this.canvasContainer=document.createElement("div"),this.canvasContainer.className="canvas-container",this.canvasContainer.style.position="relative",this.canvasContainer.style.width="100%",this.canvasContainer.style.height="100%",t.innerHTML="",t.appendChild(this.canvasContainer)}async _initializeFabricCanvas(){const t=document.createElement("canvas");t.id=`fabric-canvas-${this.blockId}`,this.canvasContainer.appendChild(t),this.fabricCanvas=new fabric.Canvas(t.id,{isDrawingMode:!1,selection:!1,preserveObjectStacking:!0,renderOnAddRemove:!0,skipTargetFind:!1,interactive:!0}),this._setupDrawingBrush(),this._setupFabricEventListeners(),await this._resizeCanvas()}_setupDrawingBrush(){this.fabricCanvas.freeDrawingBrush=new fabric.PencilBrush(this.fabricCanvas),this.fabricCanvas.freeDrawingBrush.width=this.config.size,this.fabricCanvas.freeDrawingBrush.color=this.config.color,this.currentBrush=this.fabricCanvas.freeDrawingBrush}_setupFabricEventListeners(){this.fabricCanvas.on("path:created",(t=>{this._handlePathCreated(t)})),this.fabricCanvas.on("mouse:down",(()=>{this.fabricCanvas.isDrawingMode&&(this.isDrawing=!0)})),this.fabricCanvas.on("mouse:up",(()=>{this.isDrawing&&(this.isDrawing=!1)})),this.fabricCanvas.on("canvas:cleared",(()=>{this._handleCanvasCleared()}))}_handlePathCreated(t){const e=t.path,i={pathData:e.path,strokeWidth:e.strokeWidth,stroke:e.stroke,fill:e.fill||"",left:e.left,top:e.top,scaleX:e.scaleX,scaleY:e.scaleY,angle:e.angle},n=this.createAnnotation(i);n.fabricPath=e,this._addStrokeToPage(this.currentPage,n),console.debug("[ScribbleTool] Path created and saved as annotation:",n.id)}_handleCanvasCleared(){const t=this.getAnnotationsForPage(this.currentPage);for(const e of t)this.deleteAnnotation(e.id);this.strokesByPage.delete(this.currentPage)}enable(){this.isEnabled=!0,console.debug("[ScribbleTool] Scribble tool enabled")}disable(){this.isActive&&this.deactivate(),this.isEnabled=!1,console.debug("[ScribbleTool] Scribble tool disabled")}activate(){if(!this.isEnabled)return console.warn("[ScribbleTool] Cannot activate disabled tool"),!1;try{this.fabricCanvas.isDrawingMode=!0,this.fabricCanvas.selection=!1,this.fabricCanvas.defaultCursor="crosshair",this.fabricCanvas.freeDrawingCursor="crosshair";const t=this.container.querySelector(`#draw-container-${this.blockId}`);return t&&(t.style.pointerEvents="auto",t.classList.add("active")),this._resizeCanvas(),this.isActive=!0,console.debug("[ScribbleTool] Scribble tool activated"),!0}catch(t){return console.error("[ScribbleTool] Error activating tool:",t),!1}}deactivate(){try{this.fabricCanvas&&(this.fabricCanvas.isDrawingMode=!1,this.fabricCanvas.defaultCursor="default");const t=this.container.querySelector(`#draw-container-${this.blockId}`);t&&(t.style.pointerEvents="none",t.classList.remove("active")),this.isActive=!1,console.debug("[ScribbleTool] Scribble tool deactivated")}catch(t){console.error("[ScribbleTool] Error deactivating tool:",t)}}handlePageChange(t){super.handlePageChange(t),this.fabricCanvas&&this.fabricCanvas.clear(),this._renderStrokesForPage(t),this._resizeCanvas()}async _resizeCanvas(){if(this.fabricCanvas&&this.pdfManager)try{const t=this.container.querySelector(`#pdf-container-${this.blockId}`);if(!t)return void console.warn("[ScribbleTool] PDF container not found");const e=t.offsetWidth||800,i=t.offsetHeight||600;this.canvasWidth=e,this.canvasHeight=i,this.fabricCanvas.setDimensions({width:this.canvasWidth,height:this.canvasHeight});const n=this.container.querySelector(`#draw-container-${this.blockId}`);n&&(n.style.width=this.canvasWidth+"px",n.style.height=this.canvasHeight+"px"),this.canvasContainer&&(this.canvasContainer.style.width=this.canvasWidth+"px",this.canvasContainer.style.height=this.canvasHeight+"px"),console.debug(`[ScribbleTool] Canvas resized to ${this.canvasWidth}x${this.canvasHeight}`)}catch(t){console.error("[ScribbleTool] Error resizing canvas:",t)}}setConfig(t){super.setConfig(t),this.fabricCanvas&&this.fabricCanvas.freeDrawingBrush&&(t.color&&(this.fabricCanvas.freeDrawingBrush.color=t.color),t.size&&(this.fabricCanvas.freeDrawingBrush.width=t.size))}_addStrokeToPage(t,e){this.strokesByPage.has(t)||this.strokesByPage.set(t,[]),this.strokesByPage.get(t).push(e)}_renderStrokesForPage(t){const e=this.getAnnotationsForPage(t);for(const i of e)this._renderStrokeFromAnnotation(i);console.debug(`[ScribbleTool] Rendered ${e.length} strokes for page ${t}`)}_renderStrokeFromAnnotation(t){try{const e=t.data,i=new fabric.Path(e.pathData,{left:e.left||0,top:e.top||0,strokeWidth:e.strokeWidth||this.config.size,stroke:e.stroke||this.config.color,fill:e.fill||"",scaleX:e.scaleX||1,scaleY:e.scaleY||1,angle:e.angle||0,selectable:!1,evented:!1});this.fabricCanvas.add(i),t.fabricPath=i}catch(e){console.error("[ScribbleTool] Error rendering stroke:",e)}}clearCurrentPage(){this.fabricCanvas&&this.fabricCanvas.clear();const t=this.getAnnotationsForPage(this.currentPage);for(const e of t)this.deleteAnnotation(e.id);this.strokesByPage.delete(this.currentPage)}undoLastStroke(){const t=this.getAnnotationsForPage(this.currentPage);if(0===t.length)return!1;const e=t[t.length-1];return e.fabricPath&&this.fabricCanvas.remove(e.fabricPath),this.deleteAnnotation(e.id),!0}async loadAnnotations(t){await super.loadAnnotations(t),this._renderStrokesForPage(this.currentPage)}async cleanup(){console.debug("[ScribbleTool] Cleaning up scribble tool"),this.fabricCanvas&&(this.fabricCanvas.dispose(),this.fabricCanvas=null),this.strokesByPage.clear(),this.canvasContainer&&this.canvasContainer.parentNode&&this.canvasContainer.parentNode.removeChild(this.canvasContainer),this.canvasContainer=null,this.currentBrush=null}}class a extends i{constructor(t={}){super({name:"highlight",...t}),this.isSelecting=!1,this.selectionTimeout=null,this.config={color:"#FFFF0080",opacity:.5,borderRadius:"2px",...this.config},this.highlightElements=new Map,this.highlightContainer=null}async init(){try{console.debug("[HighlightTool] Initializing highlight tool"),await this._setupHighlightContainer(),this.isEnabled=!0,console.debug("[HighlightTool] Highlight tool initialized successfully")}catch(t){throw console.error("[HighlightTool] Initialization error:",t),t}}async _setupHighlightContainer(){let t=this.container.querySelector(`#highlight-container-${this.blockId}`);if(t)t.style.display="none",t.style.visibility="hidden",t.style.opacity="0",t.style.backgroundColor="transparent",t.style.background="none",console.debug("[HighlightTool] ✅ BULLETPROOF FIX: Existing highlight container hidden");else{t=document.createElement("div"),t.id=`highlight-container-${this.blockId}`,t.className="highlight-container",t.style.position="absolute",t.style.top="0",t.style.left="0",t.style.pointerEvents="none",t.style.zIndex="5",t.style.display="none",t.style.visibility="hidden",t.style.opacity="0",t.style.backgroundColor="transparent",t.style.background="none",console.debug("[HighlightTool] ✅ BULLETPROOF FIX: Highlight container hidden by default");const e=this.container.querySelector(`#pdf-container-${this.blockId}`);e&&e.appendChild(t)}this.highlightContainer=t}enable(){this.isEnabled=!0,console.debug("[HighlightTool] Highlight tool enabled")}disable(){this.isActive&&this.deactivate(),this.isEnabled=!1,console.debug("[HighlightTool] Highlight tool disabled")}activate(){if(!this.isEnabled)return console.warn("[HighlightTool] Cannot activate disabled tool"),!1;try{return this._enableTextHighlighting(),this.isActive=!0,console.debug("[HighlightTool] Highlight tool activated"),!0}catch(t){return console.error("[HighlightTool] Error activating tool:",t),!1}}deactivate(){try{this._disableTextHighlighting(),this._clearSelection(),this.isActive=!1,console.debug("[HighlightTool] Highlight tool deactivated")}catch(t){console.error("[HighlightTool] Error deactivating tool:",t)}}_enableTextHighlighting(){const t=this.container.querySelector(`#text-layer-${this.blockId}`);t?(t.style.pointerEvents="auto",t.style.userSelect="text",t.style.webkitUserSelect="text",t.style.MozUserSelect="text",t.style.msUserSelect="text",t.classList.add("highlight-tool-active"),this.addEventHandler(t,"mouseup",this._handleTextSelection.bind(this)),this.addEventHandler(t,"mousedown",this._handleMouseDown.bind(this)),this._styleTextSpans(t)):console.warn("[HighlightTool] Text layer not found")}_disableTextHighlighting(){const t=this.container.querySelector(`#text-layer-${this.blockId}`);t&&(t.style.pointerEvents="none",t.style.userSelect="none",t.style.webkitUserSelect="none",t.style.MozUserSelect="none",t.style.msUserSelect="none",t.classList.remove("highlight-tool-active"),this._removeTextSpanStyles(t))}_styleTextSpans(t){const e=t.querySelectorAll("span");if(e.length>2e3){const t=`highlight-hover-${this.blockId}`;let e=document.getElementById(t);e||(e=document.createElement("style"),e.id=t,e.textContent=`\n                    #text-layer-${this.blockId}.highlight-tool-active span:hover {\n                        background-color: rgba(255, 255, 0, 0.2) !important;\n                        border-radius: 2px;\n                        transition: background-color 0.2s ease;\n                    }\n                `,document.head.appendChild(e))}else e.forEach((t=>{t.style.cursor="text",t.style.transition="background-color 0.2s ease",t.style.borderRadius="2px",t.classList.add("highlight-selectable")}))}_removeTextSpanStyles(t){t.querySelectorAll("span.highlight-selectable").forEach((t=>{t.classList.remove("highlight-selectable"),t.style.cursor="",t.style.transition="",t.style.borderRadius=""}));const e=`highlight-hover-${this.blockId}`,i=document.getElementById(e);i&&i.remove()}_handleMouseDown(t){this.selectionTimeout&&(clearTimeout(this.selectionTimeout),this.selectionTimeout=null),this.isSelecting=!0}_handleTextSelection(t){this.isSelecting&&(this.selectionTimeout&&clearTimeout(this.selectionTimeout),this.selectionTimeout=setTimeout((()=>{this._processTextSelection(),this.isSelecting=!1}),300))}_processTextSelection(){const t=window.getSelection();if(!t||0===t.rangeCount)return;const e=t.getRangeAt(0);if(!e.collapsed&&e.toString().trim())try{const t=this._getSelectionData(e);if(t){const e=this.createAnnotation(t);this._renderHighlight(e),console.debug("[HighlightTool] Created highlight:",e.id)}}catch(i){console.error("[HighlightTool] Error processing text selection:",i)}finally{this._clearSelection()}}_getSelectionData(t){const e=this.container.querySelector(`#text-layer-${this.blockId}`);if(!e)return null;const i=t.getClientRects();if(0===i.length)return null;const n=e.getBoundingClientRect(),a=[];for(let o=0;o<i.length;o++){const t=i[o];a.push({left:t.left-n.left,top:t.top-n.top,width:t.width,height:t.height})}return{text:t.toString().trim(),highlights:a,startOffset:t.startOffset,endOffset:t.endOffset,containerInfo:this._getContainerInfo(t)}}_getContainerInfo(t){var e,i;const n=t.startContainer,a=t.endContainer;return{startContainer:n.nodeType===Node.TEXT_NODE?(null==(e=n.parentElement)?void 0:e.id)||"":n.id||"",endContainer:a.nodeType===Node.TEXT_NODE?(null==(i=a.parentElement)?void 0:i.id)||"":a.id||"",startOffset:t.startOffset,endOffset:t.endOffset}}_renderHighlight(t){const e=t.data;if(!e.highlights||0===e.highlights.length)return;const i=[];e.highlights.forEach(((e,n)=>{const a=document.createElement("div");a.className="highlight-element",a.style.position="absolute",a.style.left=e.left+"px",a.style.top=e.top+"px",a.style.width=e.width+"px",a.style.height=e.height+"px",a.style.backgroundColor=this.config.color,a.style.opacity=this.config.opacity,a.style.borderRadius=this.config.borderRadius,a.style.pointerEvents="none",a.dataset.annotationId=t.id,a.dataset.highlightIndex=n,this.highlightContainer.appendChild(a),i.push(a)})),this.highlightElements.set(t.id,i)}_clearSelection(){window.getSelection&&window.getSelection().removeAllRanges()}handlePageChange(t){super.handlePageChange(t),this._clearAllHighlightElements(),this._renderHighlightsForPage(t)}_clearAllHighlightElements(){this.highlightContainer&&(this.highlightContainer.innerHTML=""),this.highlightElements.clear()}_renderHighlightsForPage(t){const e=this.getAnnotationsForPage(t);for(const i of e)this._renderHighlight(i);console.debug(`[HighlightTool] Rendered ${e.length} highlights for page ${t}`)}deleteAnnotation(t){const e=this.highlightElements.get(t);return e&&(e.forEach((t=>{t.parentNode&&t.parentNode.removeChild(t)})),this.highlightElements.delete(t)),super.deleteAnnotation(t)}setConfig(t){super.setConfig(t),(t.color||t.opacity)&&this._updateExistingHighlights()}_updateExistingHighlights(){for(const t of this.highlightElements.values())t.forEach((t=>{t.style.backgroundColor=this.config.color,t.style.opacity=this.config.opacity}))}async loadAnnotations(t){await super.loadAnnotations(t),this._renderHighlightsForPage(this.currentPage)}async cleanup(){console.debug("[HighlightTool] Cleaning up highlight tool"),this.selectionTimeout&&(clearTimeout(this.selectionTimeout),this.selectionTimeout=null),this._clearAllHighlightElements();const t=`highlight-hover-${this.blockId}`,e=document.getElementById(t);e&&e.remove(),this.highlightContainer=null}}class o extends i{constructor(t={}){super({name:"text",...t})}async init(){console.debug("[TextTool] Initializing text tool"),this.isEnabled=!0}enable(){this.isEnabled=!0}disable(){this.isEnabled=!1}activate(){return this.isActive=!0,!0}deactivate(){this.isActive=!1}async cleanup(){console.debug("[TextTool] Cleaning up text tool")}}class s extends i{constructor(t={}){super({name:"shape",...t})}async init(){console.debug("[ShapeTool] Initializing shape tool"),this.isEnabled=!0}enable(){this.isEnabled=!0}disable(){this.isEnabled=!1}activate(){return this.isActive=!0,!0}deactivate(){this.isActive=!1}async cleanup(){console.debug("[ShapeTool] Cleaning up shape tool")}}class r extends i{constructor(t={}){super({name:"note",...t})}async init(){console.debug("[NoteTool] Initializing note tool"),this.isEnabled=!0}enable(){this.isEnabled=!0}disable(){this.isEnabled=!1}activate(){return this.isActive=!0,!0}deactivate(){this.isActive=!1}async cleanup(){console.debug("[NoteTool] Cleaning up note tool")}}class l extends t{constructor(t={}){super(),this.blockId=t.blockId,this.container=t.container,this.pdfManager=t.pdfManager,this.storageManager=t.storageManager,this.allowAnnotation=!1!==t.allowAnnotation,this.tools=new Map,this.activeTool=null,this.isInitialized=!1,this.config={enabledTools:["scribble","highlight","text","shape","note"],defaultTool:null,...t.config},this._bindMethods()}async init(){if(this.isInitialized)console.warn("[ToolManager] Already initialized");else if(this.allowAnnotation)try{console.debug("[ToolManager] Initializing tools..."),await this._registerTools(),this._setupEventListeners(),this.isInitialized=!0,console.debug(`[ToolManager] Initialized with ${this.tools.size} tools`),this.emit("initialized",{tools:Array.from(this.tools.keys()),toolManager:this})}catch(t){throw console.error("[ToolManager] Initialization error:",t),t}else console.debug("[ToolManager] Annotations disabled, skipping tool initialization")}async _registerTools(){const t=[{name:"scribble",class:n,enabled:this.config.enabledTools.includes("scribble")},{name:"highlight",class:a,enabled:this.config.enabledTools.includes("highlight")},{name:"text",class:o,enabled:this.config.enabledTools.includes("text")},{name:"shape",class:s,enabled:this.config.enabledTools.includes("shape")},{name:"note",class:r,enabled:this.config.enabledTools.includes("note")}];for(const e of t)e.enabled&&await this._registerTool(e.name,e.class)}async _registerTool(t,e){try{console.debug(`[ToolManager] Registering ${t} tool`);const i=new e({name:t,blockId:this.blockId,container:this.container,pdfManager:this.pdfManager,storageManager:this.storageManager});await i.init(),this._setupToolEventListeners(i),this.tools.set(t,i),console.debug(`[ToolManager] Registered ${t} tool successfully`)}catch(i){console.error(`[ToolManager] Error registering ${t} tool:`,i)}}_setupEventListeners(){this.pdfManager&&this.pdfManager.on("pageChanged",(t=>{this.handlePageChange(t.pageNum)})),this._setupKeyboardShortcuts()}_setupToolEventListeners(t){t.on("annotationCreated",(t=>{this.emit("annotationCreated",t)})),t.on("annotationUpdated",(t=>{this.emit("annotationUpdated",t)})),t.on("annotationDeleted",(t=>{this.emit("annotationDeleted",t)})),t.on("configChanged",(t=>{this.emit("toolConfigChanged",t)}))}_setupKeyboardShortcuts(){const t={KeyH:"highlight",KeyM:"scribble",KeyT:"text",KeyS:"shape",KeyN:"note",Escape:"deactivate"},e=e=>{if("INPUT"!==e.target.tagName&&"TEXTAREA"!==e.target.tagName)if(e.ctrlKey||e.metaKey){const i=t[e.code];"deactivate"===i?(this.deactivateCurrentTool(),e.preventDefault()):i&&this.tools.has(i)&&(this.activateTool(i),e.preventDefault())}else"Escape"===e.code&&(this.deactivateCurrentTool(),e.preventDefault())};document.addEventListener("keydown",e),this._keyboardHandler=e}activateTool(t){const e=this.tools.get(t);if(!e)return console.warn(`[ToolManager] Tool '${t}' not found`),!1;try{return this.activeTool&&this.deactivateCurrentTool(),e.activate(),this.activeTool=e,console.debug(`[ToolManager] Activated ${t} tool`),this.emit("toolActivated",{toolName:t,tool:e}),!0}catch(i){return console.error(`[ToolManager] Error activating ${t} tool:`,i),!1}}deactivateCurrentTool(){if(!this.activeTool)return!1;try{const t=this.activeTool.name;return this.activeTool.deactivate(),console.debug(`[ToolManager] Deactivated ${t} tool`),this.emit("toolDeactivated",{toolName:t,tool:this.activeTool}),this.activeTool=null,!0}catch(t){return console.error("[ToolManager] Error deactivating current tool:",t),!1}}getTool(t){return this.tools.get(t)}getAllTools(){return Array.from(this.tools.values())}getActiveTool(){return this.activeTool}getActiveToolName(){return this.activeTool?this.activeTool.name:null}hasToolAvailable(t){return this.tools.has(t)}handlePageChange(t){for(const i of this.tools.values())try{i.handlePageChange(t)}catch(e){console.error(`[ToolManager] Error handling page change for ${i.name}:`,e)}this.emit("pageChanged",{pageNum:t})}setToolConfig(t,e){const i=this.tools.get(t);return!!i&&(i.setConfig(e),!0)}getToolConfig(t){const e=this.tools.get(t);return e?e.getConfig():null}enableTool(t){const e=this.tools.get(t);return!!e&&(e.enable(),this.emit("toolEnabled",{toolName:t,tool:e}),!0)}disableTool(t){const e=this.tools.get(t);return!!e&&(this.activeTool===e&&this.deactivateCurrentTool(),e.disable(),this.emit("toolDisabled",{toolName:t,tool:e}),!0)}getAllAnnotations(){const t={};for(const[e,i]of this.tools){const n=i.exportAnnotations();Object.keys(n).length>0&&(t[e]=n)}return t}async loadAllAnnotations(t){const e=[];for(const[n,a]of Object.entries(t)){const t=this.tools.get(n);t&&e.push(t.loadAnnotations(a))}try{await Promise.all(e),console.debug("[ToolManager] Loaded annotations for all tools")}catch(i){console.error("[ToolManager] Error loading annotations:",i)}}clearAllAnnotations(){for(const t of this.tools.values())t.annotations.clear(),t.annotationsByPage.clear();this.emit("allAnnotationsCleared")}getToolStatistics(){const t={};for(const[e,i]of this.tools)t[e]={totalAnnotations:i.annotations.size,annotationsByPage:Object.fromEntries(i.annotationsByPage),isEnabled:i.isToolEnabled(),isActive:i.isToolActive()};return t}_bindMethods(){this.activateTool=this.activateTool.bind(this),this.deactivateCurrentTool=this.deactivateCurrentTool.bind(this),this.handlePageChange=this.handlePageChange.bind(this)}async destroy(){console.debug("[ToolManager] Destroying tool manager"),this.deactivateCurrentTool();const t=[];for(const i of this.tools.values())t.push(i.destroy());try{await Promise.all(t)}catch(e){console.error("[ToolManager] Error destroying tools:",e)}this.tools.clear(),this._keyboardHandler&&(document.removeEventListener("keydown",this._keyboardHandler),this._keyboardHandler=null),this.removeAllListeners(),this.container=null,this.pdfManager=null,this.storageManager=null,this.activeTool=null,this.isInitialized=!1}}class c extends t{constructor(t={}){super(),this.blockId=t.blockId,this.container=t.container,this.allowDownload=!1!==t.allowDownload,this.isStudio=t.isStudio||!1,this.toolbar=null,this.navigation=null,this.statusBar=null,this.loadingIndicator=null,this.errorDisplay=null,this.isInitialized=!1,this.currentPage=1,this.totalPages=0,this.activeToolName=null,this.eventHandlers=new Map,this._bindMethods()}async init(){if(this.isInitialized)console.warn("[UIManager] Already initialized");else try{console.debug("[UIManager] Initializing UI components"),this._initializeLoadingIndicator(),this._initializeErrorDisplay(),this._initializeToolbar(),this._initializeNavigation(),this._initializeStatusBar(),this._setupEventListeners(),this.isInitialized=!0,console.debug("[UIManager] UI initialization complete"),this.emit("initialized",{uiManager:this})}catch(t){throw console.error("[UIManager] Initialization error:",t),t}}_initializeLoadingIndicator(){this.loadingIndicator=this.container.querySelector(".loading-indicator"),this.loadingIndicator||(this.loadingIndicator=document.createElement("div"),this.loadingIndicator.className="loading-indicator",this.loadingIndicator.innerHTML='\n                <div class="loading-spinner"></div>\n                <div class="loading-text">Loading PDF...</div>\n            ',this.loadingIndicator.style.display="block",this.container.appendChild(this.loadingIndicator))}_initializeErrorDisplay(){this.errorDisplay=this.container.querySelector(".pdf-error"),this.errorDisplay||(this.errorDisplay=document.createElement("div"),this.errorDisplay.className="pdf-error",this.errorDisplay.style.display="none",this.errorDisplay.innerHTML='\n                <div class="error-icon">⚠️</div>\n                <div class="error-message">An error occurred</div>\n                <button class="error-retry">Retry</button>\n            ',this.container.appendChild(this.errorDisplay));const t=this.errorDisplay.querySelector(".error-retry");t&&this._addEventHandler(t,"click",(()=>{this.emit("retryRequested")}))}_initializeToolbar(){if(this.toolbar=this.container.querySelector(`#toolbar-${this.blockId}`),this.toolbar)return console.debug("[UIManager] Using existing toolbar from HTML template"),void this._setupToolbarEvents();console.warn("[UIManager] Toolbar not found in template, creating fallback"),this.toolbar=document.createElement("div"),this.toolbar.id=`toolbar-${this.blockId}`,this.toolbar.className="pdf-toolbar",this.toolbar.innerHTML=this._createToolbarHTML();const t=this.container.querySelector(`#pdf-main-${this.blockId}`);t&&t.insertBefore(this.toolbar,t.firstChild),this._setupToolbarEvents()}_createToolbarHTML(){const t=[{name:"highlight",icon:"fas fa-highlighter",title:"Highlight Text"},{name:"scribble",icon:"fas fa-pen",title:"Draw/Scribble"},{name:"text",icon:"fas fa-font",title:"Add Text"},{name:"shape",icon:"fas fa-shapes",title:"Draw Shape"},{name:"note",icon:"fas fa-sticky-note",title:"Add Note"}];let e="";for(const i of t)e+=`\n                <button class="tool-button" data-tool="${i.name}" title="${i.title}">\n                    <i class="${i.icon}"></i>\n                </button>\n            `;return`\n            <div class="toolbar-section tools-section">\n                <div class="tool-buttons">\n                    ${e}\n                </div>\n            </div>\n            <div class="toolbar-section settings-section">\n                <div class="setting-controls">\n                    <label for="color-input-${this.blockId}">\n                        <i class="fas fa-palette"></i>\n                    </label>\n                    <input type="color" id="color-input-${this.blockId}" value="#FF0000" class="color-picker">\n                    <label for="size-input-${this.blockId}">\n                        <i class="fas fa-expand-arrows-alt"></i>\n                    </label>\n                    <input type="range" id="size-input-${this.blockId}" min="1" max="20" value="5" class="size-slider">\n                </div>\n            </div>\n            <div class="toolbar-section actions-section">\n                <div class="action-buttons">\n                    <button class="action-button" data-action="clear" title="Clear All">\n                        <i class="fas fa-trash"></i>\n                    </button>\n                    <button class="action-button" data-action="undo" title="Undo">\n                        <i class="fas fa-undo"></i>\n                    </button>\n                    ${this.allowDownload?'<button class="action-button" data-action="download" title="Download PDF"><i class="fas fa-download"></i></button>':""}\n                </div>\n            </div>\n        `}_setupToolbarEvents(){this.toolbar.querySelectorAll(".tool-button").forEach((t=>{this._addEventHandler(t,"click",(()=>{const e=t.dataset.tool;this._activateTool(e)}))}));this.toolbar.querySelectorAll(".action-button").forEach((t=>{this._addEventHandler(t,"click",(()=>{const e=t.dataset.action;this._handleAction(e)}))}));const t=this.toolbar.querySelector(".color-picker");t&&this._addEventHandler(t,"change",(t=>{this.emit("colorChanged",{color:t.target.value})}));const e=this.toolbar.querySelector(".size-slider");e&&this._addEventHandler(e,"input",(t=>{this.emit("sizeChanged",{size:parseInt(t.target.value,10)})}))}_initializeNavigation(){console.debug(`[UIManager] 🔍 DEBUG: Initializing navigation for blockId: ${this.blockId}`),console.debug("[UIManager] 🔍 DEBUG: Container element:",this.container);const t=[`#navigation-${this.blockId}`,".pdf-navigation",'[id*="navigation"]','[class*="navigation"]'];let e=null;for(const a of t){console.debug(`[UIManager] 🔍 DEBUG: Trying selector: ${a}`);const t=this.container.querySelector(a);if(t){console.debug(`[UIManager] ✅ Found navigation with selector: ${a}`,t),e=t;break}console.debug(`[UIManager] ❌ No element found with selector: ${a}`)}if(this.navigation=e,console.debug("[UIManager] 🔍 DEBUG: Final navigation element:",this.navigation),this.navigation)return console.debug("[UIManager] Using existing navigation from HTML template"),console.debug("[UIManager] 🔍 DEBUG: Navigation element HTML:",this.navigation.outerHTML),void this._setupNavigationEvents();console.warn("[UIManager] Navigation not found in template, creating fallback"),this.navigation=document.createElement("div"),this.navigation.id=`navigation-${this.blockId}`,this.navigation.className="pdf-navigation",this.navigation.innerHTML='\n            <div class="nav-section">\n                <button class="nav-button" data-nav="first" title="First Page">\n                    <i class="fas fa-step-backward"></i>\n                </button>\n                <button class="nav-button" data-nav="prev" title="Previous Page">\n                    <i class="fas fa-chevron-left"></i>\n                </button>\n                <span class="page-info">\n                    <input type="number" class="page-input" value="1" min="1">\n                    <span class="page-separator">of</span>\n                    <span class="total-pages">1</span>\n                </span>\n                <button class="nav-button" data-nav="next" title="Next Page">\n                    <i class="fas fa-chevron-right"></i>\n                </button>\n                <button class="nav-button" data-nav="last" title="Last Page">\n                    <i class="fas fa-step-forward"></i>\n                </button>\n            </div>\n            <div class="zoom-section">\n                <button class="zoom-button" data-zoom="out" title="Zoom Out">\n                    <i class="fas fa-search-minus"></i>\n                </button>\n                <span class="zoom-info">100%</span>\n                <button class="zoom-button" data-zoom="in" title="Zoom In">\n                    <i class="fas fa-search-plus"></i>\n                </button>\n                <button class="zoom-button" data-zoom="fit" title="Fit to Page">\n                    <i class="fas fa-expand"></i>\n                </button>\n                <button class="zoom-button" data-zoom="fit-width" title="Fit Width">\n                    <i class="fas fa-arrows-alt-h"></i>\n                </button>\n            </div>\n        ';const i=this.container.querySelector(`#pdf-main-${this.blockId}`),n=this.container.querySelector(".pdf-viewer-area");i&&n?i.insertBefore(this.navigation,n.nextSibling):i&&i.appendChild(this.navigation),this._setupNavigationEvents()}_setupNavigationEvents(){if(console.debug("[UIManager] 🔍 DEBUG: Setting up navigation events for:",this.navigation),!this.navigation)return void console.error("[UIManager] ❌ Navigation element not found! Cannot set up navigation events.");const t=this.navigation.querySelectorAll(".nav-button");console.debug(`[UIManager] 🔍 DEBUG: Found ${t.length} navigation buttons:`,t),t.forEach(((t,e)=>{const i=t.dataset.nav;console.debug(`[UIManager] 🔍 DEBUG: Setting up nav button ${e}: action="${i}", element:`,t),i?(t.style.cursor="pointer",t.style.userSelect="none",this._addEventHandler(t,"click",(t=>{t.preventDefault(),t.stopPropagation(),console.debug(`[UIManager] 🚀 Navigation button clicked! Action: ${i}`),console.debug(`[UIManager] 🚀 Current page: ${this.currentPage}, Total: ${this.totalPages}`),this._handleNavigation(i)})),this._addEventHandler(t,"touchend",(t=>{t.preventDefault(),t.stopPropagation(),console.debug(`[UIManager] 🚀 Navigation button touched! Action: ${i}`),this._handleNavigation(i)})),this._addEventHandler(t,"mousedown",(()=>{t.style.backgroundColor="#0066cc"})),this._addEventHandler(t,"mouseup",(()=>{t.style.backgroundColor=""})),this._addEventHandler(t,"mouseleave",(()=>{t.style.backgroundColor=""}))):console.warn(`[UIManager] ⚠️ Button ${e} has no data-nav attribute!`,t)}));const e=this.navigation.querySelector(".page-input");console.debug("[UIManager] 🔍 DEBUG: Found page input:",e),e&&(this._addEventHandler(e,"change",(t=>{const e=parseInt(t.target.value,10);console.debug(`[UIManager] 🔍 DEBUG: Page input changed to: ${e}`),e>=1&&e<=this.totalPages?(console.debug(`[UIManager] 🚀 Emitting pageNavigationRequested for input: ${e}`),this.emit("pageNavigationRequested",{pageNum:e})):(console.warn(`[UIManager] ⚠️ Page ${e} out of range (1-${this.totalPages})`),t.target.value=this.currentPage)})),this._addEventHandler(e,"keypress",(t=>{if("Enter"===t.key){const e=parseInt(t.target.value,10);console.debug(`[UIManager] 🔍 DEBUG: Page input Enter pressed: ${e}`),e>=1&&e<=this.totalPages&&(console.debug(`[UIManager] 🚀 Emitting pageNavigationRequested for Enter: ${e}`),this.emit("pageNavigationRequested",{pageNum:e}))}})));const i=this.navigation.querySelectorAll(".zoom-button");console.debug(`[UIManager] 🔍 DEBUG: Found ${i.length} zoom buttons:`,i),i.forEach(((t,e)=>{const i=t.dataset.zoom;console.debug(`[UIManager] 🔍 DEBUG: Setting up zoom button ${e}: action="${i}", element:`,t),i?(t.style.cursor="pointer",t.style.userSelect="none",this._addEventHandler(t,"click",(t=>{t.preventDefault(),t.stopPropagation(),console.debug(`[UIManager] 🚀 Zoom button clicked! Action: ${i}`),this._handleZoom(i)})),this._addEventHandler(t,"touchend",(t=>{t.preventDefault(),t.stopPropagation(),console.debug(`[UIManager] 🚀 Zoom button touched! Action: ${i}`),this._handleZoom(i)})),this._addEventHandler(t,"mousedown",(()=>{t.style.backgroundColor="#0066cc"})),this._addEventHandler(t,"mouseup",(()=>{t.style.backgroundColor=""})),this._addEventHandler(t,"mouseleave",(()=>{t.style.backgroundColor=""}))):console.warn(`[UIManager] ⚠️ Zoom button ${e} has no data-zoom attribute!`,t)})),this.navigation&&(this.navigation.setAttribute("data-debug-events","true"),this.navigation.setAttribute("data-nav-buttons",t.length.toString()),this.navigation.setAttribute("data-zoom-buttons",i.length.toString()),console.debug(`[UIManager] ✅ Navigation events setup complete. Nav buttons: ${t.length}, Zoom buttons: ${i.length}`))}_initializeStatusBar(){if(this.statusBar=this.container.querySelector(`#status-bar-${this.blockId}`),this.statusBar)return void console.debug("[UIManager] Using existing status bar from HTML template");console.warn("[UIManager] Status bar not found in template, creating fallback"),this.statusBar=document.createElement("div"),this.statusBar.id=`status-bar-${this.blockId}`,this.statusBar.className="pdf-status-bar",this.statusBar.innerHTML='\n            <div class="status-section">\n                <span class="status-text">Ready</span>\n            </div>\n            <div class="tool-status">\n                <span class="active-tool-label">No tool active</span>\n            </div>\n        ';const t=this.container.querySelector(`#pdf-main-${this.blockId}`);t?t.appendChild(this.statusBar):this.container.appendChild(this.statusBar)}_setupEventListeners(){this._addEventHandler(document,"keydown",this._handleKeyboardShortcuts.bind(this))}_handleKeyboardShortcuts(t){"INPUT"!==t.target.tagName&&"TEXTAREA"!==t.target.tagName&&("ArrowLeft"===t.key||"PageUp"===t.key?(this._handleNavigation("prev"),t.preventDefault()):"ArrowRight"===t.key||"PageDown"===t.key?(this._handleNavigation("next"),t.preventDefault()):"Home"===t.key?(this._handleNavigation("first"),t.preventDefault()):"End"===t.key&&(this._handleNavigation("last"),t.preventDefault()))}_activateTool(t){this.emit("toolRequested",{toolName:t})}_handleAction(t){switch(t){case"clear":this.emit("clearRequested");break;case"undo":this.emit("undoRequested");break;case"download":this.emit("downloadRequested")}}_handleNavigation(t){if(console.debug(`[UIManager] 🔍 DEBUG: _handleNavigation called with action: ${t}`),console.debug(`[UIManager] 🔍 DEBUG: Current page: ${this.currentPage}, Total pages: ${this.totalPages}`),0===this.totalPages)return void console.warn("[UIManager] ⚠️ No pages available for navigation");let e=this.currentPage;switch(t){case"first":e=1,console.debug(`[UIManager] 🔍 DEBUG: Navigate to first page: ${e}`);break;case"prev":e=Math.max(1,this.currentPage-1),console.debug(`[UIManager] 🔍 DEBUG: Navigate to previous page: ${e} (from ${this.currentPage})`);break;case"next":e=Math.min(this.totalPages,this.currentPage+1),console.debug(`[UIManager] 🔍 DEBUG: Navigate to next page: ${e} (from ${this.currentPage})`);break;case"last":e=this.totalPages,console.debug(`[UIManager] 🔍 DEBUG: Navigate to last page: ${e}`);break;default:return void console.warn(`[UIManager] ⚠️ Unknown navigation action: ${t}`)}console.debug(`[UIManager] 🔍 DEBUG: Target page calculated: ${e}`),e<1||e>this.totalPages?console.error(`[UIManager] ❌ Target page ${e} is out of bounds (1-${this.totalPages})`):e!==this.currentPage?(console.debug(`[UIManager] 🚀 Emitting pageNavigationRequested event with pageNum: ${e}`),this.emit("pageNavigationRequested",{pageNum:e}),this._updateNavigationButtonStates(e)):console.debug("[UIManager] 🔍 DEBUG: Target page same as current page, no navigation needed")}_updateNavigationButtonStates(t=this.currentPage){if(!this.navigation)return;const e=this.navigation.querySelector('[data-nav="first"]'),i=this.navigation.querySelector('[data-nav="prev"]'),n=this.navigation.querySelector('[data-nav="next"]'),a=this.navigation.querySelector('[data-nav="last"]');e&&(e.disabled=t<=1),i&&(i.disabled=t<=1),n&&(n.disabled=t>=this.totalPages),a&&(a.disabled=t>=this.totalPages),console.debug(`[UIManager] 🔧 Updated navigation button states for page ${t}/${this.totalPages}`)}updateZoomState(t){var e;const i=null==(e=this.navigation)?void 0:e.querySelectorAll(".zoom-button");i&&i.forEach((e=>{e.dataset.zoom===t?e.classList.add("active"):e.classList.remove("active")}))}_handleZoom(t){switch(console.debug(`[UIManager] 🔍 DEBUG: Zoom action requested: ${t}`),this.updateZoomState(t),t){case"in":console.debug("[UIManager] 🔍 DEBUG: Emitting zoom in request"),this.emit("zoomRequested",{zoom:"in"});break;case"out":console.debug("[UIManager] 🔍 DEBUG: Emitting zoom out request"),this.emit("zoomRequested",{zoom:"out"});break;case"fit":console.debug("[UIManager] 🔍 DEBUG: Emitting fit to page request"),this.emit("zoomRequested",{zoom:"fit"});break;case"fit-width":console.debug("[UIManager] 🔍 DEBUG: Emitting fit to width request"),this.emit("zoomRequested",{zoom:"fit-width"})}}updateDocumentInfo(t){var e,i;this.totalPages=t.numPages||0;const n=null==(e=this.navigation)?void 0:e.querySelector(".total-pages");n&&(n.textContent=this.totalPages);const a=null==(i=this.navigation)?void 0:i.querySelector(".page-input");a&&(a.max=this.totalPages),this.updateZoomState("fit-width"),this.updateStatus(`Document loaded: ${this.totalPages} pages`)}updateCurrentPage(t,e=null){var i,n;this.currentPage=t,e&&(this.totalPages=e);const a=null==(i=this.navigation)?void 0:i.querySelector(".page-input");a&&(a.value=t);const o=null==(n=this.navigation)?void 0:n.querySelector(".total-pages");o&&e&&(o.textContent=e)}updateToolState(t,e){var i,n;this.activeToolName=e?t:null;const a=null==(i=this.toolbar)?void 0:i.querySelectorAll(".tool-button");a&&a.forEach((i=>{i.dataset.tool===t?i.classList.toggle("active",e):i.classList.remove("active")}));const o=null==(n=this.statusBar)?void 0:n.querySelector(".active-tool-label");o&&(o.textContent=e?`${t} tool active`:"No tool active")}showError(t){if(this.errorDisplay){const e=this.errorDisplay.querySelector(".error-message");e&&(e.textContent=t),this.errorDisplay.style.display="block"}this.loadingIndicator&&(this.loadingIndicator.style.display="none"),this.updateStatus(`Error: ${t}`)}hideError(){this.errorDisplay&&(this.errorDisplay.style.display="none")}setLoading(t){this.loadingIndicator&&(this.loadingIndicator.style.display=t?"block":"none"),t||this.hideError()}updateStatus(t){var e;const i=null==(e=this.statusBar)?void 0:e.querySelector(".status-text");i&&(i.textContent=t)}_addEventHandler(t,e,i,n={}){if(!t||"function"!=typeof i)return;const a=`${t.id||"element"}_${e}_${Date.now()}`;t.addEventListener(e,i,n),this.eventHandlers.set(a,{element:t,event:e,handler:i,options:n})}_removeAllEventHandlers(){for(const[t,e]of this.eventHandlers)e.element.removeEventListener(e.event,e.handler,e.options);this.eventHandlers.clear()}_bindMethods(){this.updateDocumentInfo=this.updateDocumentInfo.bind(this),this.updateCurrentPage=this.updateCurrentPage.bind(this),this.updateToolState=this.updateToolState.bind(this),this.updateZoomState=this.updateZoomState.bind(this),this.showError=this.showError.bind(this),this.hideError=this.hideError.bind(this),this.setLoading=this.setLoading.bind(this),this.updateStatus=this.updateStatus.bind(this)}destroy(){console.debug("[UIManager] Destroying UI manager"),this._removeAllEventHandlers(),this.removeAllListeners(),this.toolbar=null,this.navigation=null,this.statusBar=null,this.loadingIndicator=null,this.errorDisplay=null,this.container=null,this.isInitialized=!1}}class h extends t{constructor(t={}){super(),this.blockId=t.blockId,this.userId=t.userId||"anonymous",this.courseId=t.courseId||"",this.handlerUrl=t.handlerUrl,this.config={autoSave:!0,saveInterval:1e4,cacheExpiry:36e5,...t.config},this.annotationCache=new Map,this.dirtyPages=new Set,this.isSaving=!1,this.saveQueue=[],this.autoSaveTimer=null,this._bindMethods(),this.config.autoSave&&this._startAutoSave()}async saveAnnotation(t){try{this.annotationCache.set(t.id,t),this.dirtyPages.add(t.pageNum),this.saveQueue.push({type:"save",annotation:t,timestamp:Date.now()}),this.emit("annotationCached",t),this.config.autoSave||await this._processSaveQueue()}catch(e){console.error("[AnnotationStorage] Error saving annotation:",e),this.emit("error",e)}}async deleteAnnotation(t){try{this.annotationCache.delete(t.id),this.dirtyPages.add(t.pageNum),this.saveQueue.push({type:"delete",annotation:t,timestamp:Date.now()}),this.emit("annotationDeleted",t),this.config.autoSave||await this._processSaveQueue()}catch(e){console.error("[AnnotationStorage] Error deleting annotation:",e),this.emit("error",e)}}async loadAnnotations(t={}){try{if(console.debug("[AnnotationStorage] Loading annotations from server"),!this.handlerUrl)return console.warn("[AnnotationStorage] No handler URL provided, using existing data only"),t;const e=await this._makeRequest("GET",this.handlerUrl+"?action=load");if(e.success&&e.data){const i={...t,...e.data};return this._cacheAnnotations(i),console.debug("[AnnotationStorage] Annotations loaded successfully"),this.emit("annotationsLoaded",i),i}return console.warn("[AnnotationStorage] Failed to load from server, using existing data"),t}catch(e){return console.error("[AnnotationStorage] Error loading annotations:",e),this.emit("error",e),t}}async _processSaveQueue(){if(!this.isSaving&&0!==this.saveQueue.length){this.isSaving=!0;try{const t=this._prepareSaveData();if(!t||0===Object.keys(t).length)return void(this.isSaving=!1);if(console.debug("[AnnotationStorage] Saving annotations to server"),this.handlerUrl){const e=await this._makeRequest("POST",this.handlerUrl,{action:"save",data:t,userId:this.userId,courseId:this.courseId,blockId:this.blockId});e.success?(this.saveQueue=[],this.dirtyPages.clear(),console.debug("[AnnotationStorage] Annotations saved successfully"),this.emit("annotationsSaved",t)):(console.error("[AnnotationStorage] Server save failed:",e.error),this.emit("error",new Error(e.error||"Save failed")))}}catch(t){console.error("[AnnotationStorage] Error processing save queue:",t),this.emit("error",t)}finally{this.isSaving=!1}}}_prepareSaveData(){const t={};for(const e of this.annotationCache.values()){const i=e.type,n=e.pageNum;t[i]||(t[i]={}),t[i][n]||(t[i][n]=[]),t[i][n].push({id:e.id,timestamp:e.timestamp,userId:e.userId,data:e.data,config:e.config})}return t}_cacheAnnotations(t){for(const[e,i]of Object.entries(t))for(const[t,n]of Object.entries(i)){const i=parseInt(t,10);if(Array.isArray(n))for(const t of n){const n={id:t.id,type:e,pageNum:i,timestamp:t.timestamp||Date.now(),userId:t.userId||this.userId,data:t.data||t,config:t.config||{}};this.annotationCache.set(n.id,n)}}}async _makeRequest(t,e,i=null){const n={method:t,headers:{"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"}};i&&(n.body=JSON.stringify(i));const a=document.querySelector('meta[name="csrf-token"]');a&&(n.headers["X-CSRFToken"]=a.getAttribute("content"));const o=await fetch(e,n);if(!o.ok)throw new Error(`HTTP ${o.status}: ${o.statusText}`);return await o.json()}_startAutoSave(){this.autoSaveTimer&&clearInterval(this.autoSaveTimer),this.autoSaveTimer=setInterval((()=>{this._processSaveQueue()}),this.config.saveInterval),console.debug(`[AnnotationStorage] Auto-save started with ${this.config.saveInterval}ms interval`)}_stopAutoSave(){this.autoSaveTimer&&(clearInterval(this.autoSaveTimer),this.autoSaveTimer=null)}async forceSave(){await this._processSaveQueue()}getAnnotationsForPage(t,e=null){const i=[];for(const n of this.annotationCache.values())n.pageNum===t&&(e&&n.type!==e||i.push(n));return i}getAllAnnotations(){return Array.from(this.annotationCache.values())}getAnnotationsByType(t){const e=[];for(const i of this.annotationCache.values())i.type===t&&e.push(i);return e}clearAllAnnotations(){this.annotationCache.clear(),this.dirtyPages.clear(),this.saveQueue=[],this.emit("allAnnotationsCleared")}getCacheStatistics(){const t={totalAnnotations:this.annotationCache.size,dirtyPages:Array.from(this.dirtyPages),pendingSaves:this.saveQueue.length,autoSaveEnabled:this.config.autoSave,isSaving:this.isSaving,byType:{}};for(const e of this.annotationCache.values())t.byType[e.type]||(t.byType[e.type]=0),t.byType[e.type]++;return t}_bindMethods(){this.saveAnnotation=this.saveAnnotation.bind(this),this.deleteAnnotation=this.deleteAnnotation.bind(this),this.loadAnnotations=this.loadAnnotations.bind(this),this._processSaveQueue=this._processSaveQueue.bind(this)}destroy(){console.debug("[AnnotationStorage] Destroying annotation storage"),this._stopAutoSave(),this._processSaveQueue().catch((t=>{console.error("[AnnotationStorage] Error in final save:",t)})),this.annotationCache.clear(),this.dirtyPages.clear(),this.saveQueue=[],this.removeAllListeners()}}class d extends t{constructor(t,e,i){super(),this.runtime=t,this.element=e.jquery?e[0]:e,this.initArgs=i||{},this.config={blockId:this.initArgs.blockId||this._generateBlockId(),pdfUrl:this.initArgs.pdfUrl,allowDownload:!1!==this.initArgs.allowDownload,allowAnnotation:!1!==this.initArgs.allowAnnotation,currentPage:this.initArgs.currentPage||1,savedAnnotations:this.initArgs.savedAnnotations||{},drawingStrokes:this.initArgs.drawingStrokes||{},highlights:this.initArgs.highlights||{},userId:this.initArgs.userId||"anonymous",courseId:this.initArgs.courseId||"",isStudio:this._isStudioEnvironment()},this.pdfManager=null,this.toolManager=null,this.uiManager=null,this.storageManager=null,this.isInitialized=!1,this.isLoading=!1,this._bindMethods()}async _waitForPDFJS(){return new Promise(((t,e)=>{if(void 0!==window.pdfjsLib)return console.debug("[PdfxXBlock] PDF.js already available"),void t();console.debug("[PdfxXBlock] Waiting for PDF.js to load...");let i=0;const n=setInterval((()=>{i++,void 0!==window.pdfjsLib?(console.debug("[PdfxXBlock] PDF.js loaded successfully"),clearInterval(n),t()):i>=100&&(console.error("[PdfxXBlock] Timeout waiting for PDF.js to load"),clearInterval(n),e(new Error("PDF.js failed to load within timeout")))}),100),a=()=>{void 0!==window.pdfjsLib&&(console.debug("[PdfxXBlock] PDF.js ready via event"),clearInterval(n),document.removeEventListener("pdfjsReady",a),t())};document.addEventListener("pdfjsReady",a,{once:!0})}))}async init(){if(this.isInitialized)return console.warn("[PdfxXBlock] Already initialized"),this;if(this.isLoading)return console.warn("[PdfxXBlock] Already loading"),this;this.isLoading=!0;try{return console.debug(`[PdfxXBlock] Initializing for block ${this.config.blockId}`),await this._waitForPDFJS(),this.storageManager=new h({blockId:this.config.blockId,userId:this.config.userId,courseId:this.config.courseId,handlerUrl:this.runtime.handlerUrl(this.element,"save_annotations")}),this.pdfManager=new e({blockId:this.config.blockId,container:this.element,pdfUrl:this.config.pdfUrl,currentPage:this.config.currentPage}),this.uiManager=new c({blockId:this.config.blockId,container:this.element,allowDownload:this.config.allowDownload,isStudio:this.config.isStudio}),this.toolManager=new l({blockId:this.config.blockId,container:this.element,pdfManager:this.pdfManager,storageManager:this.storageManager,allowAnnotation:this.config.allowAnnotation}),this._setupEventListeners(),await this.pdfManager.loadDocument(this.config.pdfUrl),await this.uiManager.init(),this.config.allowAnnotation&&(await this.toolManager.init(),await this._loadExistingAnnotations()),await this.pdfManager.navigateToPage(this.config.currentPage),this.isInitialized=!0,this.isLoading=!1,this.emit("initialized",{blockId:this.config.blockId,pdfManager:this.pdfManager,toolManager:this.toolManager,uiManager:this.uiManager}),console.debug(`[PdfxXBlock] Initialization complete for block ${this.config.blockId}`),this}catch(t){throw console.error("[PdfxXBlock] Initialization error:",t),this.isLoading=!1,this.emit("error",t),t}}async _loadExistingAnnotations(){try{if(this.config.highlights&&Object.keys(this.config.highlights).length>0){const t=this.toolManager.getTool("highlight");t&&await t.loadAnnotations(this.config.highlights)}if(this.config.drawingStrokes&&Object.keys(this.config.drawingStrokes).length>0){const t=this.toolManager.getTool("scribble");t&&await t.loadAnnotations(this.config.drawingStrokes)}this.config.savedAnnotations&&Object.keys(this.config.savedAnnotations).length>0&&await this.storageManager.loadAnnotations(this.config.savedAnnotations)}catch(t){console.error("[PdfxXBlock] Error loading existing annotations:",t)}}_setupEventListeners(){this.pdfManager.on("documentLoaded",(t=>{this.emit("documentLoaded",t),this.uiManager.updateDocumentInfo(t),this.uiManager.setLoading(!1),console.debug("[PdfxXBlock] ✅ BULLETPROOF FIX: Loading indicator hidden via setLoading(false)")})),this.pdfManager.on("pageChanged",(t=>{this.emit("pageChanged",t),this.uiManager.updateCurrentPage(t.pageNum,t.totalPages),this.toolManager&&this.toolManager.handlePageChange(t.pageNum)})),this.pdfManager.on("error",(t=>{this.emit("error",t),this.uiManager.showError(t.message)})),this.toolManager&&(this.toolManager.on("toolActivated",(t=>{this.emit("toolActivated",t),this.uiManager.updateToolState(t.toolName,!0)})),this.toolManager.on("toolDeactivated",(t=>{this.emit("toolDeactivated",t),this.uiManager.updateToolState(t.toolName,!1)})),this.toolManager.on("annotationCreated",(t=>{this.emit("annotationCreated",t),this.storageManager.saveAnnotation(t)})),this.toolManager.on("annotationDeleted",(t=>{this.emit("annotationDeleted",t),this.storageManager.deleteAnnotation(t)}))),this.uiManager.on("toolRequested",(t=>{this.toolManager&&this.toolManager.activateTool(t.toolName)})),this.uiManager.on("pageNavigationRequested",(t=>{console.debug("[PdfxXBlock] 🔍 DEBUG: Received pageNavigationRequested event with data:",t),console.debug(`[PdfxXBlock] 🚀 NAVIGATION TEST: Attempting to navigate to page ${t.pageNum}`),this.pdfManager.navigateToPage(t.pageNum)})),this.uiManager.on("zoomRequested",(t=>{this.pdfManager.setZoom(t.zoom)})),this.uiManager.on("downloadRequested",(()=>{this.config.allowDownload&&this._downloadPDF()}))}_downloadPDF(){if(!this.config.pdfUrl)return void console.warn("[PdfxXBlock] No PDF URL available for download");const t=document.createElement("a");t.href=this.config.pdfUrl,t.download=this._getFileName(),t.style.display="none",document.body.appendChild(t),t.click(),document.body.removeChild(t)}_getFileName(){if(!this.config.pdfUrl)return"document.pdf";const t=this.config.pdfUrl.split("/"),e=t[t.length-1];return e.includes(".pdf")?e:"document.pdf"}_generateBlockId(){return"pdfx-"+Date.now()+"-"+Math.random().toString(36).substr(2,9)}_isStudioEnvironment(){return-1!==window.location.href.indexOf("studio")||-1!==window.location.href.indexOf("/cms/")}_bindMethods(){this.init=this.init.bind(this),this._loadExistingAnnotations=this._loadExistingAnnotations.bind(this),this._setupEventListeners=this._setupEventListeners.bind(this),this._downloadPDF=this._downloadPDF.bind(this)}getState(){return{blockId:this.config.blockId,isInitialized:this.isInitialized,isLoading:this.isLoading,currentPage:this.pdfManager?this.pdfManager.getCurrentPage():this.config.currentPage,totalPages:this.pdfManager?this.pdfManager.getTotalPages():0,activeTool:this.toolManager?this.toolManager.getActiveTool():null,documentLoaded:!!this.pdfManager&&this.pdfManager.isDocumentLoaded()}}destroy(){console.debug(`[PdfxXBlock] Destroying instance for block ${this.config.blockId}`),this.toolManager&&this.toolManager.destroy(),this.uiManager&&this.uiManager.destroy(),this.pdfManager&&this.pdfManager.destroy(),this.storageManager&&this.storageManager.destroy(),this.removeAllListeners(),this.pdfManager=null,this.toolManager=null,this.uiManager=null,this.storageManager=null,this.isInitialized=!1,this.emit("destroyed",{blockId:this.config.blockId})}}window.PdfxXBlock=function(t,e,i){const n=new d(t,e,i);return n.init().catch((t=>{console.error("[PdfxXBlock] Failed to initialize:",t)})),n},window.PdfxInstances=window.PdfxInstances||{},window.testPdfNavigation=function(t,e){console.debug(`[DEBUG] Testing navigation: ${e} for block ${t}`);const i=document.querySelector(`#navigation-${t}`);if(!i)return void console.error(`[DEBUG] Navigation element not found for block ${t}`);const n=i.querySelector(`[data-nav="${e}"]`);n?(console.debug("[DEBUG] Found button:",n),console.debug("[DEBUG] Simulating click..."),n.click()):console.error(`[DEBUG] Navigation button not found for action: ${e}`)},window.testPdfZoom=function(t,e){console.debug(`[DEBUG] Testing zoom: ${e} for block ${t}`);const i=document.querySelector(`#navigation-${t}`);if(!i)return void console.error(`[DEBUG] Navigation element not found for block ${t}`);const n=i.querySelector(`[data-zoom="${e}"]`);n?(console.debug("[DEBUG] Found zoom button:",n),console.debug("[DEBUG] Simulating click..."),n.click()):console.error(`[DEBUG] Zoom button not found for action: ${e}`)}}();
//# sourceMappingURL=pdfx-xblock.js.map
